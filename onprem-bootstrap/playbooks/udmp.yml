---
- name: udmp setup
  gather_facts: false
  hosts: unifiudm
  vars:
    udm_onboot_version: 1.0.5
    udm_onboot_download_uri: "https://github.com/boostchicken/udm-utilities/releases/download/1.0.5-fix/udm-boot_{{ udm_onboot_version }}_all.deb"

    unifi_mount_path: "/mnt/data"
    unifi_os_mount_path: "/data"

    unifi_os_container: "unifi-os"
    unifi_os_cmd: podman exec -it "{{ unifi_os_container }}"

    unifi_onboot_directory: "{{ unifi_mount_path }}/on_boot.d/"

  tasks:
  - name: onboot - query package version
    register: onboot_version
    raw: "{{ unifi_os_cmd }} dpkg-query --showformat='${Version}' --show udm-boot"
    ignore_errors: true
    changed_when: "false"

  - name: onboot - installation
    when: onboot_version is not defined or ( onboot_version.stdout is defined and onboot_version.stdout != udm_onboot_version )
    block:
      - name: onboot - download package
        raw: curl -L "{{ udm_onboot_download_uri }}" -o "{{ unifi_mount_path }}/unifi-os/udm-boot-{{ udm_onboot_version }}.deb"
      - name: onboot - install package
        raw: "{{ unifi_os_cmd }} dpkg -i {{ unifi_os_mount_path }}/udm-boot-{{ udm_onboot_version }}.deb"

  - name: onboot - deploy shell scripts
    with_items:
    - { name: "sshkeys", src: "files/udmp/onboot/00-onboot-sshkeys.sh", enabled: yes }
    - { name: "podman_cni", src: "files/udmp/onboot/04-onboot-podman-cni.sh", enabled: yes }
    - { name: "container", src: "files/udmp/onboot/05-onboot-container.sh", enabled: yes }
    - { name: "dns", src: "files/udmp/onboot/05-onboot-dns.sh", enabled: yes }
    - { name: "github_ssh", src: "files/udmp/onboot/05-onboot-github-ssh.sh", enabled: yes }
    - { name: "coredns", src: "files/udmp/onboot/10-onboot-coredns.sh", enabled: yes }
    - { name: "tailscale", src: "files/udmp/onboot/11-onboot-tailscale.sh", enabled: yes }
    include_tasks: tasks/slurp_b64_copy.yml
    vars:
      destination_folder: "{{ unifi_onboot_directory }}"
  
  - name: onboot - setup podman cni configs
    with_items:
    - { name: "cni", src: "files/udmp/podman/cni/20-dns.conflist", enabled: yes }
    include_tasks: tasks/slurp_b64_copy.yml
    vars:
      destination_folder: "{{ unifi_mount_path }}/podman/cni/"

  - name: onboot - ensure executable flag for all scripts
    raw: chmod -c +x {{ unifi_onboot_directory }}/*.sh
    register: chmod
    changed_when: "'changed to' in chmod.stdout"

  - name: onboot - run scripts
    raw: for script in $(ls {{ unifi_onboot_directory }}/*.sh); do sh $script; done;

  - name: tailscale up
    raw: |
      podman exec tailscaled tailscale up \
        --hostname=$(hostname) \
        --advertise-tags=tag:unifiudm \
        --advertise-routes=$(ip -4 route show | grep 192.168 | grep / | tr -s ' ' | cut -d ' ' -f 0 | paste -d',' -s) \
        --advertise-exit-node \
        --accept-routes \
        --accept-dns \
        --authkey {{ lookup('hashi_vault', 'secret=generic/data/tailscale:reusable') }}

  - name: tailscale status
    raw: podman exec tailscaled tailscale status
    register: tailscale_status
    changed_when: "false"
  - debug:
      msg:
      - "{{ tailscale_status.stdout }}"