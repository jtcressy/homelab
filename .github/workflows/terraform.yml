name: Terraform
on:
  push:
    branches: [ main ]
    paths:
    - 'terraform/**'
  workflow_dispatch:
  pull_request:

permissions: write-all

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up gcloud Cloud SDK environment
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Query .terraform-version
      id: terraform-version
      uses: juliangruber/read-file-action@v1
      with:
        path: ./terraform/.terraform-version

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ steps.terraform-version.outputs.content }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`\`\`${{ steps.validate.outputs.stdout }}\`\`\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

  # ensure-fluxcd:
  #   runs-on: ubuntu-latest
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Setup gcloud Cloud SDK environment
  #       uses: google-github-actions/setup-gcloud@v0.2.0
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true

  #     - name: Get GKE Credentials
  #       id: get-credentials
  #       uses: google-github-actions/get-gke-credentials@main
  #       with:
  #         cluster_name: primary
  #         location: us-central1-a

  #     - name: Setup Flux CLI
  #       uses: fluxcd/flux2/action@main

  #     - name: Fluxcd Check
  #       run: flux check
          
