name: Bootstrap ArgoCD if needed

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - 'argocd/install/**'
    - '.github/workflows/argocd-init.yml'

jobs:
  argocd-init:
    concurrency: argocd-init
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    services:
      op-connect-sync:
        image: 1password/connect-api:latest
        ports:
          - 8080:8080
        volumes:
          - op-data:/home/opuser/.op/data
        env:
          OP_SESSION: ${{ secrets.OP_CREDENTIALS_B64 }}
      op-connect-api:
        image: 1password/connect-sync:latest
        ports:
          - 8081:8080
        volumes:
          - op-data:/home/opuser/.op/data
        env:
          OP_SESSION: ${{ secrets.OP_CREDENTIALS_B64 }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure 1Password Connect
      uses: 1password/load-secrets-action/configure@v1
      with:
        connect-host: http://localhost:8080
        connect-token: ${{ secrets.OP_ACCESS_TOKEN }}
    
    - name: Load 1Password Secrets
      uses: 1password/load-secrets-action@v1.0.1
      env:
        TAILSCALE_API_KEY: op://jtcressy-net-infra/tailscale/credential
        TAILSCALE_EPHEMERAL_AUTHKEY: op://jtcressy-net-infra/tailscale/ephemeral/credential
        TAILSCALE_REUSABLE_AUTHKEY: op://jtcressy-net-infra/tailscale/reusable/credential

    - name: Tailscale
      uses: tailscale/github-action@effa99fe9dc68518c77d0e7c00879f6599714d39
      with:
        authkey: ${{ env.TAILSCALE_EPHEMERAL_AUTHKEY }}
        args: "--advertise-tags=tag:ghactions"

    - name: Set up gcloud Cloud SDK environment
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Sync GKE Kubeconfig
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: primary
        location: us-central1-a

    - name: Install ArgoCD Autopilot and ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd
        VERSION=$(curl --silent "https://api.github.com/repos/argoproj-labs/argocd-autopilot/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
        curl -L --output - https://github.com/argoproj-labs/argocd-autopilot/releases/download/$VERSION/argocd-autopilot-linux-amd64.tar.gz | tar zx
        mv ./argocd-autopilot-* /usr/local/bin/argocd-autopilot
        argocd-autopilot version

    - name: Check for ArgoCD Namespace
      run: |
        if kubectl get ns argocd; then
          echo "namespace_exists=true" >> $GITHUB_ENV
        else
          echo "namespace_exists=false" >> $GITHUB_ENV
        fi
    
    - name: Bootstrap ArgoCD
      if: env.namespace_exists == 'false'
      run: |
        argocd-autopilot repo bootstrap --hide-password --repo https://github.com/jtcressy/homelab/argocd/install -t ${{ secrets.GITHUB_TOKEN }}