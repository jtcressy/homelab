apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  # Create can not be restricted to a resource name.
  verbs: ["create"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
subjects:
- kind: ServiceAccount
  name: tailscale
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-proxy
  labels:
    app.kubernetes.io/component: tailscale-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale-proxy
    spec:
      serviceAccountName: tailscale
      initContainers:
      - name: sysctler
        image: busybox
        securityContext:
          privileged: true
        command: ["/bin/sh"]
        args:
          - -c
          - sysctl -w net.ipv4.ip_forward=1
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
      containers:
      - name: tailscale
        imagePullPolicy: Always
        image: ghcr.io/tailscale/tailscale:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /dev/net
            mknod /dev/net/tun c 10 200
            tailscaled --state=kube:${KUBE_SECRET} &
            PID=$!
            tailscale up --accept-dns=false --accept-routes --authkey=${AUTH_KEY} --hostname=${HOSTNAME}
            until tailscale ip -4 | grep 100; do echo 'Waiting for ip address on "tailscale0" to exist...'; sleep 5; done &&
            iptables -t nat -I PREROUTING -i tailscale0 -j DNAT --to-destination "$(getent hosts ${DEST_IP} | awk '{ print $1 }')"
            wait ${PID}
        readinessProbe:
          initialDelaySeconds: 5
          exec:
            command:
              - /bin/sh
              - -c
              - tailscale status
        livenessProbe:
          initialDelaySeconds: 15
          exec:
            command:
              - /bin/sh
              - -c
              - tailscale status
        resources:
          requests:
            cpu: 150m
            memory: 20Mi
          limits:
            cpu: 500m
            memory: 50Mi
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: CLUSTER_NAME
              name: cluster-facts
        - name: HOSTNAME
          value: "$(CLUSTER_NAME)-k3s-server"
        - name: KUBE_SECRET
          value: "tailscale"
        - name: AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: k3s-cluster-secrets
              key: tailscale-token
        - name: DEST_IP
          value: "k3s-server"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN